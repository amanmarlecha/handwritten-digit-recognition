# -*- coding: utf-8 -*-
"""ML-MAJOR-MAY(Viraj Phate).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZOLmuBLhCKmYru-LSyiXLfsfbgo2bKmt
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

pixel_data= pd.read_csv("digit_svm.csv")

pixel_data

four= pixel_data.iloc[3,1:]
four.shape
four= four.values.reshape(28,28)
plt.imshow(four,cmap='gray')
plt.title("Digit 4")

nine=pixel_data.iloc[33,1:]
nine.shape
nine= nine.values.reshape(28,28)
plt.imshow(nine,cmap='gray')
plt.title("Digit 9")

pixel_data.info

pixel_data.isnull().sum()

pixel_data_copy=pixel_data

pixel_data_copy=pixel_data.fillna (pixel_data_copy.mean())

pixel_data_copy

y= pixel_data_copy['label']
x= pixel_data_copy.drop(columns='label')

y

print(pixel_data_copy.shape)

from sklearn.preprocessing import scale  

x_scale= scale(x)

x_scale

from sklearn.model_selection import train_test_split
from sklearn.model_selection import KFold

kf = KFold(n_splits=5)
for train_index, test_index in kf.split(x_scale):
  x_train,x_test = x_scale[train_index],x_scale[test_index]
  y_train,y_test = y[train_index],y[test_index]

from sklearn.svm import SVC

linear_model = SVC(kernel='linear')
linear_model.fit(x_train,y_train)

pred_y = linear_model.predict(x_test)

pred_y

y_test

mat_y_test = y_test.iloc[:-1].values

mat_y_test

pred_y-y_test

mat_error = (pred_y-y_test).iloc[:-1].values

mat_error

from sklearn import metrics
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

#linear model

accuracy_score(pred_y,y_test)

confusion_matrix(pred_y,y_test)

print(classification_report(pred_y,y_test))

non_linear_model = SVC(kernel='rbf')

non_linear_model.fit(x_train,y_train)

pred_y= non_linear_model.predict(x_test)

pred_y= non_linear_model.predict(x_test)

#non_linear_model
print(accuracy_score(pred_y,y_test))

print(confusion_matrix(pred_y,y_test))

print(classification_report(pred_y,y_test))